- recm_count = @freelancer.recommendies.select(:user_id).uniq.count
= simple_form_for(@freelancer, :validate => true, :as => 'user', :url => update_users_path, :html => {:class => 'well form form-horizontal registration-box' }) do |f|
  .inputs.span11.edit-profile
    %br
    %br
    .span2#basic_bio
      %br
      %br
      = image_tag "#{@freelancer.gravatar}?s=180"
      - title = 'You cannot endorse yourself'
      = link_to "Endorse", 'javascript:void(0)', class: 'btn disabled', title: title

      %br
      %br
      .rate
        .icon-e
          = image_tag 'money.png', title: 'Rate'
        .info
          = f.input :rate, as: :select, collection: User::ALLOWED_USER_RATES_AS_OPTIONS, default: '$', input_html: {style: 'width 70%'}, label: false
      %hr
      .github
        .icon-e
          = image_tag 'github.png', title: 'Github'
        .info
          = f.input :github, as: :string, placeholder: 'Github URL', label: false
      %hr
      .personal-url
        .icon-e
          = image_tag 'URL.png', title: 'Personal URL'
        .info
          = f.input :personal_url, as: :string, label: false, placeholder: 'Personal URL'
      %hr
      .email
        .icon
          = image_tag 'mail.png', title: 'Mail'
      .info
        = link_to "Email", "mailto:#{@freelancer.email}"
      %hr
    .span8#detail_bio

      %br
      = f.input :full_name, :required => true, placeholder: 'Full Name',label: false, :input_html => { :required => true, :class => "top", style: 'width: 100%;'}
      %h1
        = @freelancer.status.upcase

      = f.input :status,:collection => User::ALLOWED_WORK_STATUS_AS_OPTIONS, :label => false, placeholder: 'Status', :default => @freelancer.status || 'Available', :input_html => { :required => true , :class => "text top"}  

      %hr

      %h5 Job Title
      = f.association :job_type, :as => :select, :collection => User::ALLOWED_JOB_TITLE_AS_OPTIONS, label: false, :input_html => { :required => true , :class => "text top"} 
      %h5 Experience (year)
      = f.input :experience, as: :integer,collection: User::ALLOWED_EXP_YEARS,  label: false, :input_html => {:required => true}

      %br
      %h5 Platforms
      = f.association :platforms, :as => :check_boxes, :collection => User::ALLOWED_PLATFORMS_AS_OPTIONS, label: false, :item_wrapper_class => 'inline'

      %br
      %h5 Languages
      = f.association :languages, :as => :check_boxes, :collection => User::ALLOWED_LANGUAGES_AS_OPTIONS, label: false, :item_wrapper_class => 'inline'
      %hr

      .address
        %h5 Location
        .span4
          = f.input :address, placeholder: 'Address',label: false, :input_html => { :required => true, :class => "top"}
        .span2
          = f.input :town, placeholder: 'Town',label: false,  input_html: {required: true}
        .span1
          = f.input :zip, placeholder: 'Zip', label: false, input_html: {required: true}
      %br
      %br
      %br
      .romote-onsite
        = f.association :work_locations, as: :check_boxes ,collection: User::ALLOWED_WORK_ONSITE_AS_OPTIONS, label: false , :item_wrapper_class => 'inline'
        = f.input :outside_colorado, inline_label: 'I live outside Colorado - $99 a year for a listing.', label: false
      %hr
      %h5 Endorsing:
      %br
      #endorsings.inline
        - if @freelancer.recommendies.present?
          - @freelancer.recommendies.select(:user_id).uniq.each_with_index do |record, index|
            - recommendation = Recommendation.where(user_id: record.user_id).first
            - recommendie = recommendation.recommendi
            .endorsement.span3{class: "rec-#{index}"}
              .recommendie-gravatar
                = image_tag "#{recommendie.gravatar}?s=100"
              .recommendie-details
                %h3
                  = recommendie.name.titleize
                %h6 
                  = recommendie.try(:job_type).try(:name).try(:titleize)
                %h6
                  = "Endorsed: #{recommendation.skill_type.name}"
                %hr
                - recommendie.recommendies.select(:user_id).uniq.each_with_index do |rcrd, i|
                  - r = Recommendation.where(user_id: rcrd.user_id).first
                  - rc = r.recommendi
                  = link_to image_tag("#{rc.gravatar}?s=20"), show_freelancer_users_url(rc.username), target: '_blank'
  .span1
    = f.submit 'save', class: 'btn'

%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br